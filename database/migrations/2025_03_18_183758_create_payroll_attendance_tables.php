<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up()
    {
        /**
         * Table 4: employees
         * - References the parent firms table (firms)
         */
        Schema::create('employees', function (Blueprint $table) {
            $table->id();
            // firm_id references the firms table (already created under SaaS module)
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->string('fname')->nullable();
            $table->string('mname')->nullable();
            $table->string('lname')->nullable();
            $table->string('gender')->nullable();
            $table->string('email')->nullable();
            $table->string('phone')->nullable();
            // Additional payroll-specific employee fields can be added here

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 5: work_shifts
         * - References firms via firm_id.
         */
        Schema::create('work_shifts', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->string('shift_title');
            $table->text('shift_desc')->nullable();
            $table->boolean('is_inactive')->default(false);

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 6: work_shifts_algos
         * - Defines rules for generating work shift days.
         */
        Schema::create('work_shifts_algos', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('work_shift_id')->constrained('work_shifts')->onDelete('cascade');
            $table->text('week_off_pattern')->nullable();
            $table->unsignedBigInteger('holiday_calendar_id')->nullable();
            $table->boolean('allow_wfh')->default(false);
            $table->string('half_day_rule')->nullable();
            $table->string('overtime_rule')->nullable();
            $table->json('rules_config')->nullable();
            $table->boolean('is_active')->default(true);

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 7: work_shift_days
         * - Day-by-day work schedule generated by the algo.
         */
        Schema::create('work_shift_days', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('work_shift_id')->constrained('work_shifts')->onDelete('cascade');
            $table->date('work_date');
            // day_status is a string; its valid values are managed at the model level
            $table->string('day_status')->nullable();
            $table->time('start_time')->nullable();
            $table->time('end_time')->nullable();

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 8: work_breaks
         */
        Schema::create('work_breaks', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->string('break_title');
            $table->text('break_desc')->nullable();
            $table->time('start_time')->nullable();
            $table->time('end_time')->nullable();
            $table->boolean('is_inactive')->default(false);

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 9: work_shift_days_breaks
         * - Junction table to link shift days with breaks.
         */
        Schema::create('work_shift_days_breaks', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('work_shift_day_id')->constrained('work_shift_days')->onDelete('cascade');
            $table->foreignId('work_break_id')->constrained('work_breaks')->onDelete('cascade');

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 10: emp_work_shifts
         * - Assigns employees to work shifts.
         */
        Schema::create('emp_work_shifts', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('work_shift_id')->constrained('work_shifts')->onDelete('cascade');
            $table->foreignId('employee_id')->constrained('employees')->onDelete('cascade');
            $table->date('start_date')->nullable();
            $table->date('end_date')->nullable();

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 11: leave_types
         */
        Schema::create('leave_types', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->string('leave_title');
            $table->text('leave_desc')->nullable();
            $table->string('leave_code')->nullable();
            $table->string('leave_nature')->nullable(); // e.g., Paid, Unpaid
            $table->integer('max_days')->nullable();
            $table->boolean('carry_forward')->default(false);
            $table->boolean('encashable')->default(false);

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 12: leaves_quota_templates
         */
        Schema::create('leaves_quota_templates', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->string('name');
            $table->text('desc')->nullable();
            $table->boolean('is_inactive')->default(false);

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 13: leaves_quota_template_setups
         * - Override constraint names to keep them under MySQL's length limit.
         */
        Schema::create('leaves_quota_template_setups', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');

            // Instead of constrained(), define columns and add custom foreign keys:
            $table->unsignedBigInteger('leaves_quota_template_id');
            $table->unsignedBigInteger('leave_type_id');

            $table->integer('days_assigned')->default(0);
            $table->string('alloc_period_unit')->nullable();   // e.g., year, month
            $table->integer('alloc_period_value')->nullable(); // e.g., 1 for 1 year

            $table->timestamps();
            $table->softDeletes();

            $table->foreign('leaves_quota_template_id', 'fk_lqts_temp')
                ->references('id')->on('leaves_quota_templates')
                ->onDelete('cascade');
            $table->foreign('leave_type_id', 'fk_lt')
                ->references('id')->on('leave_types')
                ->onDelete('cascade');
        });

        /**
         * Table 14: emp_leave_allocations
         * - Override constraint name for leaves_quota_template_id as needed.
         */
        Schema::create('emp_leave_allocations', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('employee_id')->constrained('employees')->onDelete('cascade');

            // Custom FK for leaves_quota_template_id to shorten the identifier
            $table->unsignedBigInteger('leaves_quota_template_id')->nullable();
            $table->foreign('leaves_quota_template_id', 'fk_emp_lqts_temp')
                ->references('id')->on('leaves_quota_templates')
                ->onDelete('set null');

            $table->foreignId('leave_type_id')->constrained('leave_types')->onDelete('cascade');
            $table->integer('days_assigned')->default(0);
            $table->date('start_date')->nullable();
            $table->date('end_date')->nullable();
            $table->integer('days_balance')->default(0);

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 15: emp_leave_requests
         */
        Schema::create('emp_leave_requests', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('employee_id')->constrained('employees')->onDelete('cascade');
            $table->foreignId('leave_type_id')->constrained('leave_types')->onDelete('cascade');
            $table->date('apply_from');
            $table->date('apply_to');
            $table->integer('apply_days')->default(0);
            $table->text('reason')->nullable();
            $table->string('status')->default('Pending');

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 16: emp_leave_request_logs
         */
        Schema::create('emp_leave_request_logs', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('emp_leave_request_id')->constrained('emp_leave_requests')->onDelete('cascade');
            $table->dateTime('status_datetime')->nullable();
            $table->text('remarks')->nullable();
            $table->string('status')->nullable();
            // action_by is stored as an unsigned integer (handled at the model level)
            $table->unsignedBigInteger('action_by')->nullable();

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 17: emp_punches
         */
        Schema::create('emp_punches', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('employee_id')->constrained('employees')->onDelete('cascade');
            $table->date('work_date');
            $table->dateTime('punch_datetime');
            // Instead of enum, we use a string
            $table->string('in_out', 10)->default('IN');
            $table->string('punch_type')->nullable(); // e.g., normal, break, etc.
            $table->boolean('is_final')->default(false);

            $table->timestamps();
            $table->softDeletes();
        });

        /**
         * Table 18: emp_attendances
         */
        Schema::create('emp_attendances', function (Blueprint $table) {
            $table->id();
            $table->foreignId('firm_id')->constrained('firms')->onDelete('cascade');
            $table->foreignId('employee_id')->constrained('employees')->onDelete('cascade');
            $table->date('work_date');
            $table->foreignId('work_shift_day_id')->nullable()->constrained('work_shift_days')->onDelete('set null');
            $table->decimal('ideal_working_hours', 5, 2)->default(0);
            $table->decimal('actual_worked_hours', 5, 2)->default(0);
            $table->decimal('final_day_weightage', 5, 2)->default(1);
            $table->text('attend_remarks')->nullable();

            $table->timestamps();
            $table->softDeletes();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down()
    {
        // Drop tables in reverse order to satisfy foreign key constraints
        Schema::dropIfExists('emp_attendances');
        Schema::dropIfExists('emp_punches');
        Schema::dropIfExists('emp_leave_request_logs');
        Schema::dropIfExists('emp_leave_requests');
        Schema::dropIfExists('emp_leave_allocations');
        Schema::dropIfExists('leaves_quota_template_setups');
        Schema::dropIfExists('leaves_quota_templates');
        Schema::dropIfExists('leave_types');
        Schema::dropIfExists('emp_work_shifts');
        Schema::dropIfExists('work_shift_days_breaks');
        Schema::dropIfExists('work_breaks');
        Schema::dropIfExists('work_shift_days');
        Schema::dropIfExists('work_shifts_algos');
        Schema::dropIfExists('work_shifts');
        Schema::dropIfExists('employees');
    }
};
